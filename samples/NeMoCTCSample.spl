use com.teracloud.streamsx.stt::*;

/**
 * NeMo FastConformer CTC Sample
 * 
 * Demonstrates the exported NeMo FastConformer model with CTC output.
 * This sample uses the new NEMO_CTC model type in OnnxSTTImpl.
 */
composite NeMoCTCSample {
    graph
        // Read test audio file
        stream<blob audioData> AudioFile = FileSource() {
            param
                file: "audio/librispeech_3sec.wav";
                format: block;
                blockSize: 48000u;  // 3 seconds at 16kHz
        }
        
        // Convert to audio stream format expected by STT
        stream<blob audioChunk, uint64 audioTimestamp> AudioStream = Custom(AudioFile) {
            logic
                state: {
                    mutable uint64 currentTime = 0ul;
                }
                onTuple AudioFile: {
                    // Output audio chunk with timestamp
                    submit({
                        audioChunk = audioData,
                        audioTimestamp = currentTime
                    }, AudioStream);
                    
                    // Advance timestamp (3 seconds)
                    currentTime += 3000ul;
                }
        }
        
        // Use NeMoSTT operator with FastConformer CTC model
        stream<rstring transcription> TranscriptionStream = NeMoSTT(AudioStream) {
            param
                modelPath: "../opt/models/fastconformer_ctc_export/model.onnx";
                tokensPath: "../opt/models/fastconformer_ctc_export/tokens.txt";
                sampleRate: 16000;
                provider: "CPU";
                numThreads: 4;
        }
        
        // Display results
        () as Display = Custom(TranscriptionStream) {
            logic
                onTuple TranscriptionStream: {
                    printStringLn("=== NeMo CTC Transcription ===");
                    printStringLn("Text: " + transcription);
                    printStringLn("Expected: 'it was the first great'");
                    printStringLn("=============================");
                }
        }
        
        // Save to file  
        () as FileWriter = FileSink(TranscriptionStream) {
            param
                file: "nemo_ctc_output.txt";
                format: txt;
        }
}