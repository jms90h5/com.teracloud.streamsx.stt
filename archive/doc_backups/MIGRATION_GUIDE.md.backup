# Migration to Standard Teracloud Streams Structure

This document describes the migration from the original file structure to the official Teracloud Streams Toolkit Development Guide standards.

## Migration Overview

The migration script `migrate_to_standard_structure.sh` reorganizes the toolkit to follow official standards while updating all references to prevent build failures.

## Directory Changes

### Major Moves
- `deps/` → `lib/` (ONNX Runtime and support libraries)
- `models/` → `opt/models/` (All model files)
- `test_data/` → `opt/test_data/` (Test audio files)
- Python scripts → `impl/bin/`
- Shell scripts → `impl/bin/`
- Documentation → `doc/`
- Configuration files → `etc/`

### New Standard Structure
```
com.teracloud.streamsx.stt/
├── info.xml                       # Toolkit metadata (recommended)
├── toolkit.xml                    # Toolkit index (auto-generated)
├── etc/                          # Configuration files
│   └── requirements_nemo.txt     # Python dependencies
├── lib/                          # Support libraries
│   └── onnxruntime/              # ONNX Runtime (was deps/)
├── opt/                          # Optional components
│   ├── models/                   # Model files (was models/)
│   └── test_data/                # Test audio files (was test_data/)
├── impl/                         # Implementation directory
│   ├── bin/                      # Implementation scripts
│   ├── include/                  # Header files
│   ├── src/                      # C++ source files
│   └── lib/                      # Built libraries
├── doc/                          # Documentation (was *.md files)
├── samples/                      # Example applications
├── test/                         # Test framework
└── com.teracloud.streamsx.stt/   # SPL operators (toolkit namespace)
```

## Updated File References

### Build Commands
**Before:**
```bash
cd impl && make
python export_model_ctc_patched.py
./test_onnx_stt_operator models/ctc_model.onnx
```

**After:**
```bash
cd impl && make
python impl/bin/export_model_ctc_patched.py
./impl/bin/test_onnx_stt_operator opt/models/fastconformer_ctc_export/ctc_model.onnx
```

### SPL Operator Parameters
**Before:**
```spl
encoderModel: "models/fastconformer_ctc_export/model.onnx";
```

**After:**
```spl
encoderModel: "opt/models/fastconformer_ctc_export/model.onnx";
```

### Test Scripts
**Before:**
```bash
-I../deps/onnxruntime/include
-L../deps/onnxruntime/lib
```

**After:**
```bash
-I../lib/onnxruntime/include
-L../lib/onnxruntime/lib
```

## Application Bundle Impact

Per official guide, these directories are automatically included in .sab files:
- `/lib` - Support libraries (ONNX Runtime)
- `/etc` - Configuration files  
- `/opt` - Optional components (models, test data)
- `/impl/bin` - Implementation binaries
- `/impl/lib` - Implementation libraries

## Rollback Instructions

If migration causes issues:

1. **Stop any running applications**
2. **Restore from backup:**
   ```bash
   rm -rf * .??*
   cp -r migration_backup/* .
   cp -r migration_backup/.??* . 2>/dev/null || true
   ```
3. **Rebuild:**
   ```bash
   cd impl && make clean && make
   ```

## Post-Migration Verification

1. **Test compilation:**
   ```bash
   make clean && make
   ```

2. **Test samples:**
   ```bash
   cd samples && make
   ```

3. **Run verification:**
   ```bash
   ./impl/bin/verify_nemo_setup.sh
   ```

4. **Test SPL applications:**
   ```bash
   cd samples
   streamtool submitjob output/BasicNeMoDemo/BasicNeMoDemo.sab
   ```

## Benefits of New Structure

1. **Standards Compliance** - Follows official Teracloud Streams guidelines
2. **Automatic Packaging** - Key directories included in .sab automatically
3. **Clear Organization** - Scripts, models, and data in logical locations
4. **Better Documentation** - All docs in dedicated doc/ directory
5. **Toolkit Validation** - Can use spl-make-toolkit --check

## Updated Documentation Paths

All documentation has been moved to `doc/` and references updated:
- README.md → Updated with new paths
- test/README.md → Updated build and test commands
- All internal documentation links → Updated to doc/ prefix

The migration maintains full functionality while providing a cleaner, standards-compliant structure.